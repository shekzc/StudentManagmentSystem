<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>